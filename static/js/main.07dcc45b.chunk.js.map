{"version":3,"sources":["components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","components/Nav.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["Player","currentSong","isPlaying","setIsPlaying","audioRef","setSongInfo","songInfo","songs","setCurrentSong","setSongs","useEffect","newSongs","map","song","id","active","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","trackAnim","transform","animationPercentage","className","currentTime","style","background","color","min","max","duration","value","onChange","e","target","type","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","alt","name","src","cover","artist","LibrarySong","selectedSonghandler","undefined","playPromise","then","audio","Library","libraryStatus","Nav","setLibraryStatus","faMusic","chillHop","uuidv4","App","useRef","useState","data","timeUpdateHandler","roundedCurrent","round","roundedDuration","console","log","songEndedHandler","onTimeUpdate","onLoadedMetadata","ref","onEnded","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07dcc45b.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlay,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faPause,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Player = ({\r\n  currentSong,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  audioRef,\r\n  setSongInfo,\r\n  songInfo,\r\n  songs,\r\n  setCurrentSong,\r\n  setSongs,\r\n}) => {\r\n  //use Effect\r\n  useEffect(() => {\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === currentSong.id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n  }, [currentSong]);\r\n\r\n  //Event Handler\r\n  const playSongHandler = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  };\r\n\r\n  const getTime = (time) => {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  };\r\n\r\n  const dragHandler = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n  };\r\n\r\n  const skipTrackHandler = async (direction) => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    if (direction === \"skip-forward\") {\r\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n    } else {\r\n      if (currentIndex === 0) {\r\n        await setCurrentSong(songs[songs.length - 1]);\r\n        if (isPlaying) audioRef.current.play();\r\n      } else {\r\n        await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n      }\r\n    }\r\n    if (isPlaying) audioRef.current.play();\r\n  };\r\n\r\n  //styles\r\n  const trackAnim = {\r\n    transform: `translateX(${songInfo.animationPercentage}%`,\r\n  };\r\n\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time-control\">\r\n        <p>{getTime(songInfo.currentTime)}</p>\r\n        <div\r\n          style={{\r\n            background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`,\r\n          }}\r\n          className=\"track\"\r\n        >\r\n          <input\r\n            min={0}\r\n            max={songInfo.duration || 0}\r\n            value={songInfo.currentTime}\r\n            onChange={dragHandler}\r\n            type=\"range\"\r\n          />\r\n          <div style={trackAnim} className=\"animate-track\"></div>\r\n        </div>\r\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\r\n      </div>\r\n      <div className=\"play-control\">\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler(\"skip-back\")}\r\n          className=\"skip-back\"\r\n          size=\"2x\"\r\n          icon={faAngleLeft}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={playSongHandler}\r\n          className=\"play\"\r\n          size=\"2x\"\r\n          icon={isPlaying ? faPause : faPlay}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler(\"skip-forward\")}\r\n          className=\"skip-forward\"\r\n          size=\"2x\"\r\n          icon={faAngleRight}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import React from \"react\";\r\n\r\nconst Song = ({ currentSong, isPlaying }) => {\r\n  return (\r\n    <div className={\"song-container\"}>\r\n      <img\r\n        className={isPlaying ? \"rotateSong\" : \"\"}\r\n        alt={currentSong.name}\r\n        src={currentSong.cover}\r\n      ></img>\r\n      <h2>{currentSong.name}</h2>\r\n      <h3>{currentSong.artist}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Song;\r\n","import React from \"react\";\r\n\r\nconst LibrarySong = ({\r\n  song,\r\n  songs,\r\n  setCurrentSong,\r\n  id,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n}) => {\r\n  const selectedSonghandler = async () => {\r\n    await setCurrentSong(song);\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n\r\n    setSongs(newSongs);\r\n\r\n    if (isPlaying) audioRef.current.play();\r\n\r\n    if (isPlaying) {\r\n      const playPromise = audioRef.current.play();\r\n      if (playPromise !== undefined) {\r\n        playPromise.then((audio) => {\r\n          audioRef.current.play();\r\n        });\r\n      }\r\n    }\r\n    //const selectedSong = songs.filter((state) => state.id === id);\r\n    //setCurrentSong(selectedSong[0]);\r\n  };\r\n  \r\n\r\n\r\n  return (\r\n    <div\r\n      onClick={selectedSonghandler}\r\n      className={`library-song ${song.active ? \"selected\" : \"\"}`}\r\n    >\r\n      <img alt={song.name} src={song.cover}></img>\r\n      <div className=\"song-description\">\r\n        <h3>{song.name}</h3>\r\n        <h4>{song.artist}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LibrarySong;\r\n","import React from \"react\";\r\nimport LibrarySong from \"./LibrarySong\";\r\n\r\nconst Library = ({\r\n  songs,\r\n  setCurrentSong,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n  libraryStatus,\r\n}) => {\r\n  return (\r\n    <div className={`library ${libraryStatus ? \"active-library\" : \"\"}`}>\r\n      <h2>Library</h2>\r\n      <div className=\"library-songs\">\r\n        {songs.map((song) => (\r\n          <LibrarySong\r\n            songs={songs}\r\n            song={song}\r\n            setCurrentSong={setCurrentSong}\r\n            id={song.id}\r\n            key={song.id}\r\n            audioRef={audioRef}\r\n            isPlaying={isPlaying}\r\n            setSongs={setSongs}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Library;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMusic, faBars } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nav = ({ libraryStatus, setLibraryStatus }) => {\r\n  return (\r\n    <nav>\r\n      <h1>Mattify</h1>\r\n      <button\r\n        onClick={() => setLibraryStatus(!libraryStatus)}\r\n        className=\"w3-btn w3-round-xlarge\"\r\n      >\r\n        <FontAwesomeIcon icon={faMusic} />\r\n      </button>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction chillHop() {\r\n  return [\r\n    {\r\n      name: \"Dreamlover\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2021/02/d12927eedcc2f5afba2ab049a4a1ea46c2266ae3-1024x1024.jpg\",\r\n      artist: \"C Y G N\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=14993\",\r\n      color: [\"de8cd5\", \"#7AACE3\"],\r\n      id: uuidv4(),\r\n      active: true,\r\n    },\r\n    {\r\n      name: \"Seascape\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/11/f78c39b4bb6313ddd0354bef896c591bfb490ff8-1024x1024.jpg\",\r\n      artist: \"Makzo\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=11772\",\r\n      color: [\"#08356E\", \"#FED971\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Fuzz\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/edaf1202cf33c7a2a122b7494a7e4d3e643af45f-1024x1024.jpg\",\r\n      artist: \"Miscel\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=6005\",\r\n      color: [\"#AD476C\", \"#C8795B\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Persist\",\r\n      cover: \"https://i.scdn.co/image/ab67616d0000b273043dfeac847e1525b3b39ed3\",\r\n      artist: \"invention_\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=5142\",\r\n      color: [\"#F8E4DC\", \"#364B80\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Night Walk\",\r\n      cover: \"https://i.scdn.co/image/7d4b27a6c7946f3d2bfc9b4138d0c0877e5345b8\",\r\n      artist: \"xander.\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=3172\",\r\n      color: [\"#543B21\", \"#49532F\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Purple\",\r\n      cover: \"https://i.scdn.co/image/ab67616d0000b2730e7526acfa023ac451723b36\",\r\n      artist: \"Dontcry, Nokiaa\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=2928\",\r\n      color: [\"#392D9D\", \"#FC9275\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"You and I\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/10/0e5bb63f838ff92eeac142aae944e9f678df13c9-1024x1024.jpg\",\r\n      artist: \"Melodiesinfonie\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10336\",\r\n      color: [\"#275564\", \"#D7A1B9\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n  ];\r\n}\r\n\r\nexport default chillHop;\r\n","import React, { useState, useRef } from \"react\";\n//Import Styles\nimport \"./styles/app.scss\";\n//Adding components\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\n//Import util\nimport data from \"./data\";\n\nfunction App() {\n  const audioRef = useRef(null);\n  //State\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n  });\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    //calculate percentage\n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    const animationPercentage = Math.round(\n      (roundedCurrent / roundedDuration) * 100\n    );\n    console.log(animationPercentage);\n    setSongInfo({\n      ...songInfo,\n      currentTime: current,\n      duration,\n      animationPercentage: animationPercentage,\n    });\n  };\n  const songEndedHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    if (isPlaying) audioRef.current.play();\n  };\n\n  return (\n    <div className={`App ${libraryStatus ? \"library-active\" : \"\"}`}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} songs={songs} isPlaying={isPlaying} />\n      <Player\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        currentSong={currentSong}\n        setSongInfo={setSongInfo}\n        songInfo={songInfo}\n        setCurrentSong={setCurrentSong}\n        songs={songs}\n        setSongs={setSongs}\n      />\n      <Library\n        audioRef={audioRef}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n      />\n      <audio\n        onTimeUpdate={timeUpdateHandler}\n        onLoadedMetadata={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onEnded={songEndedHandler}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}